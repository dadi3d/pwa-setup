events {
    worker_connections 1024;
}

http {
    # Cache-Verzeichnis für imgproxy
    proxy_cache_path /var/cache/nginx/imgproxy levels=1:2 keys_zone=imgproxy_cache:100m max_size=10g inactive=30d use_temp_path=off;

    upstream pwa_app {
        server pwa-app:80;
    }
    
    upstream pwa_server {
        server pwa-server:3001;
        keepalive 32;
    }
    
    upstream imgproxy {
        server imgproxy:5175;
        keepalive 32;
    }
    
    # HTTP -> HTTPS Redirect
    server {
        listen 80;
        server_name medienausleihe.oth-aw.de www.medienausleihe.oth-aw.de;
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS Server
    server {
        listen 443 ssl;
        http2 on;
        server_name medienausleihe.oth-aw.de www.medienausleihe.oth-aw.de;
        
        # SSL Konfiguration
        ssl_certificate /etc/nginx/ssl/Cert_bundle.pem;
        ssl_certificate_key /etc/nginx/ssl/medienausleihe.key;
        
        # SSL Optimierungen
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Erhöhe Upload-Limit für größere Dateien
        client_max_body_size 100M;
        client_body_timeout 120s;
        client_header_timeout 120s;
        
        # Frontend (PWA App)
        location / {
            proxy_pass http://pwa_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        # Backend API (PWA Server)
        location /api/ {
            proxy_pass http://pwa_server/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # Timeouts für große Uploads
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # Remove CORS headers from backend to avoid conflicts
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            
            # Set CORS headers in Nginx only
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Allow-Credentials "true" always;
            
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $http_origin;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Allow-Credentials "true";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # Spezielle Konfiguration für Upload-Files (längere Timeouts)
        location /api/backup/upload-files {
            proxy_pass http://pwa_server/api/backup/upload-files;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # Erweiterte Timeouts für große File-Uploads
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Erweiterte Puffer für große Uploads
            proxy_buffering off;
            proxy_request_buffering off;
            
            # CORS für Upload-Files
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Allow-Credentials "true" always;
        }
        
        # Bildkonvertierung mit imgproxy über Query-Parameter
        # Beispiel: /api/images/files/images/test.jpg?width=300&height=200&format=webp
        location ~ ^/api/images/(.+)$ {
            set $image_path $1;
            
            # Default-Werte
            set $width "0";
            set $height "0";
            set $resize_type "fit";
            set $format "auto";
            set $quality "85";
            
            # Query-Parameter auslesen
            if ($arg_width) {
                set $width $arg_width;
            }
            if ($arg_height) {
                set $height $arg_height;
            }
            if ($arg_resize) {
                set $resize_type $arg_resize;
            }
            if ($arg_format) {
                set $format $arg_format;
            }
            if ($arg_quality) {
                set $quality $arg_quality;
            }
            
            # imgproxy URL zusammenbauen
            set $imgproxy_params "resize:$resize_type:$width:$height/quality:$quality/format:$format";
            
            # Cache-Konfiguration
            proxy_cache imgproxy_cache;
            proxy_cache_valid 200 30d;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$host$request_uri";
            proxy_cache_lock on;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_bypass $http_pragma $http_authorization;
            proxy_no_cache $http_pragma $http_authorization;
            
            # Cache-Status für Debugging
            add_header X-Cache-Status $upstream_cache_status always;
            add_header X-ImgProxy-Params $imgproxy_params always;
            
            # Browser-Caching
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
            
            # Vary Header für WebP
            add_header Vary "Accept";
            
            # Proxy zu imgproxy mit dynamischen Parametern (ohne Query-String)
            proxy_pass http://imgproxy/$imgproxy_params/plain/https://$host/api/$image_path;
            
            # Connection Settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # Timeouts für Bildverarbeitung
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # CORS für Bilder
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        }
        
        # Bildkonvertierung mit imgproxy (flexible Parameter im Pfad)
        location ~ ^/images/(?<image_params>.+) {
            # Cache-Konfiguration
            proxy_cache imgproxy_cache;
            proxy_cache_valid 200 30d;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            proxy_cache_key "$scheme$proxy_host$uri$is_args$args";
            
            # Cache-Headers setzen
            add_header X-Cache-Status $upstream_cache_status;
            add_header Cache-Control "public, max-age=2592000"; # 30 Tage
            
            # Sicherheitsheader
            add_header X-Content-Type-Options nosniff;
            
            # Vary Header für WebP
            add_header Vary "Accept";
            
            # Proxy zu imgproxy
            proxy_pass http://imgproxy/$image_params;
            
            # Connection Settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # Timeouts für Bildverarbeitung
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # CORS für Bilder
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        }
        
        # Bildauslieferung über imgproxy (für /api/files/images/*)
        location ~ ^/api/files/images/(.+)$ {
            set $image_path $1;
            
            # Default-Werte für imgproxy
            set $width "0";
            set $height "0";
            set $resize_type "fit";
            set $format "webp";
            set $quality "85";
            
            # Query-Parameter auslesen (optional)
            if ($arg_width) {
                set $width $arg_width;
            }
            if ($arg_height) {
                set $height $arg_height;
            }
            if ($arg_resize) {
                set $resize_type $arg_resize;
            }
            if ($arg_format) {
                set $format $arg_format;
            }
            if ($arg_quality) {
                set $quality $arg_quality;
            }
            
            # imgproxy URL zusammenbauen
            set $imgproxy_params "resize:$resize_type:$width:$height/quality:$quality/format:$format";
            
            # Cache-Konfiguration
            proxy_cache imgproxy_cache;
            proxy_cache_valid 200 30d;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$host$request_uri";
            proxy_cache_lock on;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_bypass $http_pragma $http_authorization;
            proxy_no_cache $http_pragma $http_authorization;
            
            # Cache-Status für Debugging
            add_header X-Cache-Status $upstream_cache_status always;
            add_header X-ImgProxy-Params $imgproxy_params always;
            
            # Browser-Caching
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
            
            # Vary Header für WebP
            add_header Vary "Accept";
            
            # Proxy zu imgproxy - Bild vom Backend holen
            proxy_pass http://imgproxy/$imgproxy_params/plain/http://pwa-server:3001/api/files/images/$image_path;
            
            # Connection Settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # Timeouts für Bildverarbeitung
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # CORS für Bilder
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        }
        
        # Andere Dateien (Dokumente etc.) direkt vom Backend
        location /api/files/ {
            proxy_pass http://pwa_server/api/files/;
            
            # Connection Settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # Cache für statische Dateien
            proxy_cache imgproxy_cache;
            proxy_cache_valid 200 30d;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$host$request_uri";
            proxy_cache_use_stale error timeout updating;
            proxy_cache_bypass $http_pragma $http_authorization;
            proxy_no_cache $http_pragma $http_authorization;
            
            # Browser-Cache Header
            add_header Cache-Control "public, max-age=2592000, immutable" always;
            add_header X-Cache-Status $upstream_cache_status always;
            
            # CORS für Dateien
            add_header Access-Control-Allow-Origin * always;
        }
        
        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}